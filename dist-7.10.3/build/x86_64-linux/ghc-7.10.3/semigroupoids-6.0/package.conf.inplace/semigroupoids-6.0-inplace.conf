name: semigroupoids
version: 6.0
id: semigroupoids-6.0-inplace
key: semig_HrLqqYGThXNHhExlzb0931
license: BSD3
copyright: Copyright (C) 2011-2015 Edward A. Kmett
maintainer: Edward A. Kmett <ekmett@gmail.com>
stability: provisional
homepage: http://github.com/ekmett/semigroupoids
synopsis: Semigroupoids: Category sans id
description:
    Provides a wide array of (semi)groupoids and operations for working with them.
    .
    A 'Semigroupoid' is a 'Category' without the requirement of identity arrows for every object in the category.
    .
    A 'Category' is any 'Semigroupoid' for which the Yoneda lemma holds.
    .
    When working with comonads you often have the @\<*\>@ portion of an @Applicative@, but
    not the @pure@. This was captured in Uustalu and Vene's \"Essence of Dataflow Programming\"
    in the form of the @ComonadZip@ class in the days before @Applicative@. Semiapplicative provides a weaker invariant, but for the comonads used for data flow programming (found in the streams package), this invariant is preserved. Applicative function composition forms a semigroupoid.
    .
    Similarly many structures are nearly a comonad, but not quite, for instance lists provide a reasonable 'extend' operation in the form of 'tails', but do not always contain a value.
    .
    Ideally the following relationships would hold:
    .
    > Foldable ----> Traversable <--- Functor ------> Alt ---------> Plus           Semigroupoid
    >      |               |            |                              |                  |
    >      v               v            v                              v                  v
    > Semifoldable ---> Semitraversable     Semiapplicative --------> Applicative -> Alternative      Category
    >                                   |               |              |                  |
    >                                   v               v              v                  v
    >                                 Semimonad ---------> Monad -------> MonadPlus          Arrow
    >
    .
    Semiapplicative, Semimonad, and Extend (not shown) give rise the Static, Kleisli and Cokleisli semigroupoids respectively.
    .
    This lets us remove many of the restrictions from various monad transformers
    as in many cases the binding operation or @\<*\>@ operation does not require them.
    .
    Finally, to work with these weaker structures it is beneficial to have containers
    that can provide stronger guarantees about their contents, so versions of 'Traversable'
    and 'Foldable' that can be folded with just a 'Semigroup' are added.
category: Control, Comonads
author: Edward A. Kmett
exposed: True
exposed-modules:
    Data.Bifunctor.Semiapplicative Data.Functor.Alt
    Data.Functor.Semiapplicative Data.Functor.Semimonad
    Data.Functor.Semimonad.Class Data.Functor.Semimonad.Trans
    Data.Functor.Extend Data.Functor.Plus Data.Groupoid
    Data.Isomorphism Data.Semigroup.Semibifoldable
    Data.Semigroup.Semibitraversable Data.Semigroup.Semifoldable
    Data.Semigroup.Semifoldable.Class Data.Semigroup.Semitraversable
    Data.Semigroup.Semitraversable.Class Data.Semigroupoid
    Data.Semigroupoid.Dual Data.Semigroupoid.Ob
    Data.Semigroupoid.Static Data.Traversable.Instances
trusted: False
import-dirs: /home/dcartwright/v6/adjunctions/dist-7.10.3/build/x86_64-linux/ghc-7.10.3/semigroupoids-6.0/build
library-dirs: /home/dcartwright/v6/adjunctions/dist-7.10.3/build/x86_64-linux/ghc-7.10.3/semigroupoids-6.0/build
data-dir: /home/dcartwright/v6/semigroupoids
hs-libraries: HSsemigroupoids-6.0-HrLqqYGThXNHhExlzb0931
depends:
    base-4.8.2.0-0d6d1084fbc041e1cded9228e80e264d
    base-orphans-0.7-d4aee40b819722149b38f2c1481be946da5dcbc4d3fcd856e6133fed13d5d71a
    bifunctors-5.5.2-05e8a9a2098683fad0fab4a3830e0675e5e540f7de32e9817bdb2870d14bc098
    comonad-5.0.3-41eaab20d24fb02258fc114245f3867c4d3a44c80f89ce52837a5e0ec5b13751
    containers-0.5.6.2-e59c9b78d840fa743d4169d4bea15592
    contravariant-1.4.1-024d52a892f4e1452f0026e3483946f53a7db7fd9a2ab753b334dd6db465e5a0
    distributive-0.5.3-01a478f53124087e2d96b8aa3a13aea4a3c1fda781a8d298a709dd0b79a5555c
    hashable-1.2.7.0-0720be0d95e1647d8ed57fa3fc58605944e071dc56ad6cfcd38e891f16722136
    semigroups-0.18.4-984c33b9ee53d489213baa4b4f682dee7af291ef6cde982ac4c21d90fe80424d
    tagged-0.8.5-ff11d1dbf79623ccdb2b9fd2398781dcc994e153ae0bcbcfeff3274fea66e0d7
    template-haskell-2.10.0.0-3c4cb52230f347282af9b2817f013181
    transformers-0.4.2.0-81450cd8f86b36eaa8fa0cbaf6efc3a3
    transformers-compat-0.6.2-1003aad634700f8d625f8e809ee69d1c7668027397ba55252c290568b5707806
    unordered-containers-0.2.9.0-6ba08f0d7297844c5e5a4e196f86bf0dadd20e1d52221b632e8d037bbda170b4
haddock-interfaces: /home/dcartwright/v6/adjunctions/dist-7.10.3/build/x86_64-linux/ghc-7.10.3/semigroupoids-6.0/doc/html/semigroupoids/semigroupoids.haddock
haddock-html: /home/dcartwright/v6/adjunctions/dist-7.10.3/build/x86_64-linux/ghc-7.10.3/semigroupoids-6.0/doc/html/semigroupoids
